"""
Django settings for drugfinder project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import datetime

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'v2&z5)2&!g=ypp=e2g#l3#*&u1j@k3fgtr9%)$bfbm3p!o93yl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#ADMINS = [('James', 'flecho@aitrics.com')]
#EMAIL_HOST = 'smtp.aitrics.com'
#EMAIL_HOST_USER = 'flecho@aitrics.com'
#EMAIL_HOST_PASSWORD = 'wnstkd003!'
#EMAIL_PORT = 25
#EMAIL_USE_TLS = True

ALLOWED_HOSTS = [
	'13.124.150.184',
	'ec2-13-124-150-184.ap-northeast-2.compute.amazonaws.com',
	'aitricsdev.com',
	'www.aitricsdev.com',
	'localhost',
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
	'django.contrib.postgres', # needed for search lookup
	'django_extensions',
	'rest_framework',
	'rest_framework_swagger',
	'drugs.apps.DrugsConfig',
	'accounts.apps.AccountsConfig',
	'history.apps.HistoryConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'drugfinder.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'drugfinder.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'drugs',
		'USER': 'flecho',
		'PASSWORD': 'wnstkd003!',
		'HOST': 'localhost',
		'PORT': '',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#		'OPTIONS': {
#			'min_length': 6,
#			'max_length': 12,
#		}
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {	
	'DEFAULT_AUTHENTICATION_CLASSES': [],
	'DEFAULT_PERMISSION_CLASSES': [],
	'DEFAULT_THROTTLE_CLASSES': (
		'rest_framework.throttling.AnonRateThrottle',
		'rest_framework.throttling.UserRateThrottle',
	),
	'DEFAULT_THROTTLE_RATES': {
		'anon': '20/second',
		'user': '10/second',
	}
}

'''	
	[ Basic Authentication ]
	: signed against a user's username and password
	: Basic Authentication is generally only appropriate for testing. 
	: If successfully authenticated, BasicAuthentication provides the following credentials.
		- request.user will be a Django User instance.
		- request.auth will be None.
	: Unauthenticated responses that are denied permission will result in HTTP 401 Unauthorized response
	: with an appropriate WWW-Authenticate header.

	Note: If you use BasicAuthentication in production you must ensure that your API is only 
		available over https. You should also ensure that your API clients will always re-request the
		username and password at login, and will never store those details to persistent storage.
'''



JWT_AUTH = {
	'JWT_VERIFY': True,
	'JWT_VERIFY_EXPIRATION': True,
	'JWT_EXPIRATION_DELTA': datetime.timedelta(seconds=600),
	'JWT_ALLOW_REFRESH': True, # changed into True
	'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=7),
}
'''
	If JWT_ALLOW_REFRESH is True, non-expired tokens can be "refreshed" to obtain a brand new token 
	with renewed expiration time. Note that only non-expired tokens will work. The JSON response looks
	the same as the normal obtain token endpoint. {"token": NEW_TOKEN}.
'''

'''
	Authentication is always run at the very start of the view, before the permission and throttling checks occur,
	and before any other code is allowed to proceed.

	Don't forget that authentication by itself won't allow or disallow an incoming request, it simply identifies
	the credentials that the request was made with.
'''

'''
	[ How authentication is determined ]
	The authentication schemes are always defined as a list of classes. REST framework will attempt to authenticate with
	each class in the list, and will set "request.user" and "request.auth" using the return value of the first class that
	successfully authenticates.

	if no class authenticates, request.user will be set to an instance of django.contrib.auth.models.AnonymousUser, and
	request.auth will be set to None.
'''


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

AUTH_USER_MODEL = 'accounts.MyUser'

SECURE_PROXY_SSL_HEADER=('HTTP_X_FORWARDED_PROTO', 'https')


CELERY_IMPORTS = {
	'drugs.models',
}


#CELERY_BROKER_URL = 'amqp://localhost'

##os.path.join(BASE_DIR, 'drugs/')


#	'DEFAULT_PERMISSION_CLASSES': (
#		'rest_framework.permissions.IsAuthenticated',
#	),
#	'DEFAULT_AUTHENTICATION_CLASSES': (
#		'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
#		'rest_framework.authentication.SessionAuthentication',
#		'rest_framework.authentication.BasicAuthentication',		
#	),
